@model EforTakipUygulamasi.Models.Request
@{
    ViewData["Title"] = "Yeni İş Ekle";
}

<div class="container">
    <div class="modal-content" style="position: static; margin: 2rem auto; max-width: 800px;">
        <h2>Yeni İş Ekle</h2>

        <form asp-action="Create" id="workForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- YENİ: Proje ID Alanı -->
            <div class="form-row">
                <div class="form-group">
                    <label asp-for="ProjectId" class="form-label">Proje ID (6 Hane)</label>
                    <input asp-for="ProjectId" class="form-input project-id-field"
                           placeholder="@ViewBag.SuggestedProjectId"
                           maxlength="6"
                           title="Boş bırakırsanız otomatik atanır" />
                    <span asp-validation-for="ProjectId" class="text-danger"></span>
                    <small style="color: #666; font-size: 0.8rem;">
                        Boş bırakırsanız otomatik: <strong>@ViewBag.SuggestedProjectId</strong> atanır
                    </small>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="form-label">İş Başlığı</label>
                    <input asp-for="Name" class="form-input" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="form-label">Açıklama</label>
                <textarea asp-for="Description" class="form-input textarea"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label asp-for="Status" class="form-label">Durum</label>
                    <select asp-for="Status" class="form-input">
                        <option value="@EforTakipUygulamasi.Common.RequestStatusEnum.New">Bekleyen</option>
                        <option value="@EforTakipUygulamasi.Common.RequestStatusEnum.InProgress">Devam Eden</option>
                        <option value="@EforTakipUygulamasi.Common.RequestStatusEnum.Testing">Test</option>
                        <option value="@EforTakipUygulamasi.Common.RequestStatusEnum.Completed">Tamamlandı</option>
                        <option value="@EforTakipUygulamasi.Common.RequestStatusEnum.Cancelled">İptal</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Priority" class="form-label">Öncelik</label>
                    <select asp-for="Priority" class="form-input">
                        <option value="@EforTakipUygulamasi.Common.PriorityLevel.Low">Düşük</option>
                        <option value="@EforTakipUygulamasi.Common.PriorityLevel.Medium">Orta</option>
                        <option value="@EforTakipUygulamasi.Common.PriorityLevel.High">Yüksek</option>
                        <option value="@EforTakipUygulamasi.Common.PriorityLevel.Critical">Kritik</option>
                    </select>
                    <span asp-validation-for="Priority" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Deadline" class="form-label">Teslim Tarihi</label>
                    <input asp-for="Deadline" type="date" class="form-input" />
                    <span asp-validation-for="Deadline" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label asp-for="AnalystHours" class="form-label">Analist Saati</label>
                    <input asp-for="AnalystHours" type="number" step="0.5" min="0" class="form-input" value="0" onchange="calculateTotalHours()" />
                    <span asp-validation-for="AnalystHours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DeveloperHours" class="form-label">Yazılımcı Saati</label>
                    <input asp-for="DeveloperHours" type="number" step="0.5" min="0" class="form-input" value="0" onchange="calculateTotalHours()" />
                    <span asp-validation-for="DeveloperHours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="KKTHours" class="form-label">KKT/Preprod Saati</label>
                    <input asp-for="KKTHours" type="number" step="0.5" min="0" class="form-input" value="0" onchange="calculateTotalHours()" />
                    <span asp-validation-for="KKTHours" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label asp-for="KKTDeadline" class="form-label">KKT Teslim Tarihi</label>
                    <input asp-for="KKTDeadline" type="date" class="form-input" />
                    <span asp-validation-for="KKTDeadline" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Assignee" class="form-label">Atanan Kişi</label>
                    <input asp-for="Assignee" class="form-input" />
                    <span asp-validation-for="Assignee" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="form-label">Toplam Saat</label>
                    <div class="form-input" style="background: #f7fafc; font-weight: bold;" id="totalHoursDisplay">0.0</div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label class="form-label">Adam-Gün</label>
                    <div class="form-input" style="background: #f7fafc;" id="manDaysDisplay">0.0</div>
                </div>
                <div class="form-group">
                    <label class="form-label">T-Shirt Size</label>
                    <div class="form-input" style="background: #f7fafc;" id="sizeDisplay">FastTrack</div>
                </div>
            </div>

            <!-- YENİ: Dosya Yükleme Alanı -->
            <div class="form-group">
                <label class="form-label">Dosyalar (Word, PDF, Excel, Resim)</label>
                <div class="file-upload-area" id="fileUploadArea">
                    <i class="fas fa-upload fa-2x" style="color: #667eea; margin-bottom: 1rem;"></i>
                    <p>Dosyaları buraya sürükleyin veya <strong>tıklayın</strong></p>
                    <p style="font-size: 0.8rem; color: #666;">Desteklenen formatlar: .doc, .docx, .pdf, .xls, .xlsx, .png, .jpg</p>
                    <input type="file" id="fileInput" multiple accept=".doc,.docx,.pdf,.xls,.xlsx,.png,.jpg,.jpeg" style="display: none;">
                </div>
                <div class="file-list" id="fileList"></div>
            </div>

            <div style="display: flex; gap: 1rem; justify-content: flex-end; margin-top: 2rem;">
                <a href="@Url.Action("Index")" class="btn btn-secondary">İptal</a>
                <button type="submit" class="btn btn-primary">Kaydet</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            calculateTotalHours();
            setupFileUpload();

            // Proje ID otomatik büyük harf
            $('#ProjectId').on('input', function() {
                this.value = this.value.toUpperCase();
            });
        });

        function calculateTotalHours() {
            const analyst = parseFloat($('[name="AnalystHours"]').val()) || 0;
            const developer = parseFloat($('[name="DeveloperHours"]').val()) || 0;
            const kkt = parseFloat($('[name="KKTHours"]').val()) || 0;

            const total = analyst + developer + kkt;
            const manDays = total / 8;

            $('#totalHoursDisplay').text(total.toFixed(1));
            $('#manDaysDisplay').text(manDays.toFixed(1));

            // T-Shirt Size hesaplama
            let size = 'FastTrack';
            if (manDays <= 5) size = 'FastTrack';
            else if (manDays <= 10) size = 'XS';
            else if (manDays <= 25) size = 'S';
            else if (manDays <= 50) size = 'M';
            else if (manDays <= 100) size = 'L';
            else size = 'XL';

            $('#sizeDisplay').text(size);
        }

        function setupFileUpload() {
            const uploadArea = $('#fileUploadArea');
            const fileInput = $('#fileInput');
            const fileList = $('#fileList');
            let selectedFiles = [];

            // Click to select
            uploadArea.on('click', function() {
                fileInput.click();
            });

            // File selection
            fileInput.on('change', function() {
                handleFiles(this.files);
            });

            // Drag and drop
            uploadArea.on('dragover dragenter', function(e) {
                e.preventDefault();
                uploadArea.addClass('dragover');
            });

            uploadArea.on('dragleave', function() {
                uploadArea.removeClass('dragover');
            });

            uploadArea.on('drop', function(e) {
                e.preventDefault();
                uploadArea.removeClass('dragover');
                handleFiles(e.originalEvent.dataTransfer.files);
            });

            function handleFiles(files) {
                Array.from(files).forEach(file => {
                    if (validateFile(file)) {
                        selectedFiles.push(file);
                        addFileToList(file);
                    }
                });
            }

            function validateFile(file) {
                const allowedTypes = ['.doc', '.docx', '.pdf', '.xls', '.xlsx', '.png', '.jpg', '.jpeg'];
                const fileExtension = '.' + file.name.split('.').pop().toLowerCase();

                if (!allowedTypes.includes(fileExtension)) {
                    alert('Desteklenmeyen dosya formatı: ' + fileExtension);
                    return false;
                }

                if (file.size > 10 * 1024 * 1024) { // 10MB
                    alert('Dosya boyutu 10MB\'dan büyük olamaz.');
                    return false;
                }

                return true;
            }

            function addFileToList(file) {
                const fileItem = $(`
                    <div class="file-item">
                        <div>
                            <span class="file-name">${file.name}</span>
                            <span class="file-size">(${formatFileSize(file.size)})</span>
                        </div>
                        <button type="button" class="remove-file-btn" onclick="removeFile('${file.name}')">×</button>
                    </div>
                `);
                fileList.append(fileItem);
            }

            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            window.removeFile = function(fileName) {
                selectedFiles = selectedFiles.filter(f => f.name !== fileName);
                fileList.find('.file-item').filter(function() {
                    return $(this).find('.file-name').text() === fileName;
                }).remove();
            };
        }
    </script>
}