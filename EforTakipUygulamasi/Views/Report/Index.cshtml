// ============================================
// Data/requests.json - PROPERTY ADLARINİ DÜZELT
// ============================================
[
  {
    "Id": 1,
    "Name": "Kullanıcı Yönetimi Modülü",
    "Description": "Kullanıcı ekleme, düzenleme ve silme işlemleri",
    "Status": 2,
    "Priority": 3,
    "CreatedDate": "2024-08-20T10:00:00",
    "Deadline": "2024-08-30T00:00:00",
    "KKTDeadline": "2024-08-28T00:00:00",
    "AnalystHours": 12,
    "DeveloperHours": 24,
    "KKTHours": 8,
    "PreprodHours": 4,
    "Assignee": "Ali Veli",
    "CreatedBy": "Koray",
    "LastModified": "2024-08-22T14:30:00",
    "LastModifiedBy": "Koray"
  },
  {
    "Id": 2,
    "Name": "Rapor Sistemi",
    "Description": "Excel ve PDF rapor çıktıları",
    "Status": 1,
    "Priority": 2,
    "CreatedDate": "2024-08-21T09:15:00",
    "Deadline": "2024-09-05T00:00:00",
    "AnalystHours": 8,
    "DeveloperHours": 20,
    "KKTHours": 6,
    "PreprodHours": 2,
    "Assignee": "Ayşe Can",
    "CreatedBy": "Koray",
    "LastModified": "2024-08-21T09:15:00",
    "LastModifiedBy": "Koray"
  },
  {
    "Id": 3,
    "Name": "Dashboard Geliştirmeleri",
    "Description": "Yeni chart'lar ve filtreleme özellikleri",
    "Status": 5,
    "Priority": 2,
    "CreatedDate": "2024-08-15T16:45:00",
    "Deadline": "2024-08-25T00:00:00",
    "AnalystHours": 4,
    "DeveloperHours": 16,
    "KKTHours": 4,
    "PreprodHours": 2,
    "Assignee": "Mehmet Kaya",
    "CreatedBy": "Koray",
    "LastModified": "2024-08-22T11:20:00",
    "LastModifiedBy": "Koray"
  }
]

// ============================================
// Controllers/ReportController.cs - BACKEND EKLENDİ
// ============================================
using Microsoft.AspNetCore.Mvc;
using EforTakipUygulamasi.Common;
using EforTakipUygulamasi.Models;
using System.Text;

namespace EforTakipUygulamasi.Controllers
{
    public class ReportController : Controller
    {
        private readonly IRequestRepository _repository;

        public ReportController(IRequestRepository repository)
        {
            _repository = repository;
        }

        public IActionResult Index()
        {
            try
            {
                var requests = _repository.GetAll();

                // Rapor verilerini hazırla
                var reportData = new ReportData
                {
                    TotalRequests = requests.Count,
                    CompletedRequests = requests.Count(r => r.Status == RequestStatusEnum.Completed),
                    InProgressRequests = requests.Count(r => r.Status == RequestStatusEnum.InProgress),
                    OverdueRequests = requests.Count(r => r.IsOverdue),
                    TotalHours = requests.Sum(r => r.TotalHours),

                    // Efor dağılımı
                    AnalystTotalHours = requests.Sum(r => r.AnalystHours),
                    DeveloperTotalHours = requests.Sum(r => r.DeveloperHours),
                    KKTTotalHours = requests.Sum(r => r.KKTHours),
                    PreprodTotalHours = requests.Sum(r => r.PreprodHours),

                    // Performans metrikleri
                    ThisWeekCreated = requests.Count(r => r.CreatedDate >= DateTime.Now.AddDays(-7)),
                    ThisMonthCreated = requests.Count(r => r.CreatedDate.Month == DateTime.Now.Month),

                    CompletionRate = requests.Count > 0 ?
                        (requests.Count(r => r.Status == RequestStatusEnum.Completed) * 100.0 / requests.Count) : 0,
                    OverdueRate = requests.Count > 0 ?
                        (requests.Count(r => r.IsOverdue) * 100.0 / requests.Count) : 0
                };

                return View(reportData);
            }
            catch (Exception ex)
            {
                ViewBag.Error = $"Rapor yüklenirken hata: {ex.Message}";
                return View(new ReportData());
            }
        }

        [HttpGet]
        public IActionResult ExportData(string format = "csv")
        {
            try
            {
                var requests = _repository.GetAll();

                if (format.ToLower() == "json")
                {
                    return Json(requests);
                }
                else // CSV
                {
                    var csv = new StringBuilder();
                    csv.AppendLine("ID,Ad,Durum,Öncelik,Analist,Yazılım,KKT,Preprod,Toplam,Oluşturma,Deadline");

                    foreach (var req in requests)
                    {
                        csv.AppendLine($"{req.Id}," +
                                     $"\"{req.Name}\"," +
                                     $"{req.Status}," +
                                     $"{req.Priority}," +
                                     $"{req.AnalystHours}," +
                                     $"{req.DeveloperHours}," +
                                     $"{req.KKTHours}," +
                                     $"{req.PreprodHours}," +
                                     $"{req.TotalHours}," +
                                     $"{req.CreatedDate:yyyy-MM-dd}," +
                                     $"{req.Deadline?.ToString("yyyy-MM-dd") ?? ""}");
                    }

                    var bytes = Encoding.UTF8.GetBytes(csv.ToString());
                    return File(bytes, "text/csv", $"efor_raporu_{DateTime.Now:yyyyMMdd}.csv");
                }
            }
            catch (Exception ex)
            {
                TempData["ErrorMessage"] = $"Export hatası: {ex.Message}";
                return RedirectToAction(nameof(Index));
            }
        }
    }

    // Rapor için veri modeli
    public class ReportData
    {
        public int TotalRequests { get; set; }
        public int CompletedRequests { get; set; }
        public int InProgressRequests { get; set; }
        public int OverdueRequests { get; set; }
        public decimal TotalHours { get; set; }

        public decimal AnalystTotalHours { get; set; }
        public decimal DeveloperTotalHours { get; set; }
        public decimal KKTTotalHours { get; set; }
        public decimal PreprodTotalHours { get; set; }

        public int ThisWeekCreated { get; set; }
        public int ThisMonthCreated { get; set; }
        public double CompletionRate { get; set; }
        public double OverdueRate { get; set; }
    }
}

// ============================================
// Views/Report/Index.cshtml - BACKEND BAĞLANTILI
// ============================================
@model EforTakipUygulamasi.Controllers.ReportData
@{
    ViewData["Title"] = "Raporlar";
}

<div class="container">
    <!-- Rapor Başlığı -->
    <div style="background: white; padding: 1.5rem; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); margin-bottom: 2rem;">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1 style="margin: 0; color: #333;">📊 Efor Takip Raporları</h1>
            <div style="display: flex; gap: 1rem;">
                <a href="/Report/ExportData?format=csv" class="btn btn-secondary">📄 CSV İndir</a>
                <a href="/Report/ExportData?format=json" class="btn btn-primary">📁 JSON İndir</a>
            </div>
        </div>
        <p style="color: #666; margin: 0.5rem 0 0 0;">Son güncelleme: @DateTime.Now.ToString("dd.MM.yyyy HH:mm")</p>
    </div>

    <!-- Basit İstatistikler -->
    <div class="dashboard-stats">
        <div class="stat-card">
            <div class="stat-value">@Model.TotalRequests</div>
            <div class="stat-label">Toplam Talep</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.CompletedRequests</div>
            <div class="stat-label">Tamamlanan</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.InProgressRequests</div>
            <div class="stat-label">Devam Eden</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.OverdueRequests</div>
            <div class="stat-label">Geciken</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.TotalHours.ToString("F0")</div>
            <div class="stat-label">Toplam Saat</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@(Model.TotalRequests > 0 ? (Model.TotalHours / Model.TotalRequests).ToString("F1") : "0")</div>
            <div class="stat-label">Ortalama Saat</div>
        </div>
    </div>

    <!-- Efor Dağılımı -->
    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem;">
        <div style="background: white; padding: 1.5rem; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <h3 style="margin-bottom: 1rem; color: #333;">Efor Dağılımı</h3>
            <div style="display: grid; gap: 0.5rem;">
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>👨‍💼 Analist:</span>
                    <strong>@Model.AnalystTotalHours.ToString("F1") saat</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>💻 Yazılım:</span>
                    <strong>@Model.DeveloperTotalHours.ToString("F1") saat</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>🧪 KKT:</span>
                    <strong>@Model.KKTTotalHours.ToString("F1") saat</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>🚀 Preprod:</span>
                    <strong>@Model.PreprodTotalHours.ToString("F1") saat</strong>
                </div>
            </div>
        </div>

        <!-- Performans Metrikleri -->
        <div style="background: white; padding: 1.5rem; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <h3 style="margin-bottom: 1rem; color: #333;">Performans Metrikleri</h3>
            <div style="display: grid; gap: 0.5rem;">
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>📅 Bu Ay Oluşturulan:</span>
                    <strong>@Model.ThisMonthCreated talep</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>📆 Bu Hafta Oluşturulan:</span>
                    <strong>@Model.ThisWeekCreated talep</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>✅ Tamamlanma Oranı:</span>
                    <strong>@Model.CompletionRate.ToString("F1")%</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 0.5rem; background: #f7fafc; border-radius: 4px;">
                    <span>⚠️ Geciken Oranı:</span>
                    <strong>@Model.OverdueRate.ToString("F1")%</strong>
                </div>
            </div>
        </div>
    </div>

    <!-- Rapor Açıklaması -->
    <div style="background: white; padding: 1.5rem; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h3 style="margin-bottom: 1rem; color: #333;">📋 Rapor Özeti</h3>
        <div style="line-height: 1.6; color: #555;">
            <p><strong>Genel Durum:</strong> Toplam @Model.TotalRequests iş talebi bulunmakta, bunların @Model.InProgressRequests'i aktif olarak devam etmekte, @Model.CompletedRequests'i tamamlanmış durumda.</p>

            <p><strong>Efor Analizi:</strong> En çok efor yazılım geliştirme kısmında harcanmış (@Model.DeveloperTotalHours saat), bunu analist çalışmaları (@Model.AnalystTotalHours saat) takip ediyor.</p>

            <p><strong>Performans:</strong> Tamamlanma oranı %@Model.CompletionRate.ToString("F1") seviyesinde. Geciken iş oranı %@Model.OverdueRate.ToString("F1") ile @(Model.OverdueRate <= 10 ? "kabul edilebilir" : "iyileştirme gerektiren") seviyede.</p>

            <p><strong>Öneriler:</strong></p>
            <ul style="margin-left: 1.5rem;">
                @if (Model.DeveloperTotalHours > Model.AnalystTotalHours * 2)
                {
                    <li>Yazılım geliştirme süreçleri optimize edilebilir</li>
                }
                @if (Model.KKTTotalHours < Model.DeveloperTotalHours * 0.3m)
                {
                    <li>Test süreçleri için daha fazla kaynak ayrılmalı</li>
                }
                @if (Model.OverdueRate > 10)
                {
                    <li>Deadline takibi güçlendirilmeli</li>
                }
            </ul>
        </div>
    </div>
</div>
